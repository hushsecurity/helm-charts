---
name: Release
on:
  workflow_dispatch:
    inputs:
      chart_name:
        description: "Chart name to release"
        required: true
        default: hush-sensor
        type: choice
        options:
          - hush-sensor

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      NO_SYNC: "1"
      HELM_SIGSTORE_VERSION: "0.3.0"
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Import PGP key
        run: |
          set -xe
          set -o pipefail
          echo "${{ secrets.HUSH_PGP_PRIVATE_KEY }}" | gpg --import
          gpg --export > /home/runner/.gnupg/pubring.gpg
          gpg --export-secret-keys > /home/runner/.gnupg/secring.gpg
      - name: Shred PGP key
        uses: gacts/run-and-post-run@v1
        with:
          post: find /home/runner/.gnupg/ -type f -exec shred -zuv {} +
      - name: Install slsa-verifier
        uses: slsa-framework/slsa-verifier/actions/installer@v2.6.0
      - name: Install sigstore plugin
        run: |
          helm plugin install https://github.com/sigstore/helm-sigstore \
            --version $HELM_SIGSTORE_VERSION
      - name: Verify sigstore plugin
        run: |
          set -xe
          PROVENANCE_FILE=$(mktemp)
          wget -O "$PROVENANCE_FILE" \
            "https://github.com/sigstore/helm-sigstore/releases/download/v$HELM_SIGSTORE_VERSION/multiple.intoto.jsonl"
          slsa-verifier verify-artifact \
            --provenance-path "$PROVENANCE_FILE" \
            --source-uri github.com/sigstore/helm-sigstore \
            --source-tag v"$HELM_SIGSTORE_VERSION" \
            /home/runner/.local/share/helm/plugins/helm-sigstore/bin/helm-sigstore
      - name: Helm Login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login -u "$GITHUB_ACTOR" --password-stdin ghcr.io
      - name: Install Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install poetry
        uses: Gr1N/setup-poetry@v9
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
      - name: Lint
        run: make lint
      - name: Release
        run: make release CHART=${{ inputs.chart_name }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
