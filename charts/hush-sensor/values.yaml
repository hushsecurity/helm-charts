# Default values for hush-sensor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to override the chart name.
nameOverride: ""

# This is to override the chart fullname.
fullnameOverride: ""

# Labels applied to all resources.
# For more information see
# https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
commonLabels: {}

# Host directory for minimal caching
hostDir: "/var/lib/hush-security"

# Override the namespace used for all objects.
# If not specified '.Release.Namespace' is used.
namespaceOverride: ""

# Mode of event logging:
# - "yes"       - log everything (may be high volume)
# - "no"        - log nothing
# - "heartbeat" - log heartbeat events only (low volume)
eventReportingConsole: "heartbeat"

# Hush deployment configuration
hushDeployment:
  # The deployment token as received from API/UI. Required.
  token: ""

  # The deployment password as received from API/UI.
  #
  # When 'hushDeployment.secretKeyRef' is defined this value is ignored.
  password: ""

  # A reference to an existing Secret with deployment password.
  #
  # The secret must be defined in the same namespace where the chart is installed.
  # All attributes are required.
  secretKeyRef:
    # Secret name
    name: ""
    # Secret key
    key: ""

# Values related to container images
image:
  # Image pull token contains registry information and credentials
  pullToken: ""

  # Container registry to pull images from
  #
  # This value is ignored when 'image.pullToken' is defined.
  registry: hushsecurity.azurecr.io

  # Overrides the image tag for sensor* images.
  sensorTag: "v0"

  # A list of pre-created image pull secrets of the form:
  #
  # pullSecretList:
  #   - name: "<secret-name-here>"
  #
  # Secrets must be pre-created in the same namespace where the chart is installed.
  #
  # When this list is empty 'image.pullSecret' can be used to create a secret
  # automatically.
  #
  # More information can be found here:
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  pullSecretList: []

  # Creates a Secret for pulling images
  #
  # When 'image.pullToken' is defined the credentials for the Secret are taken
  # from there. Otherwise both 'username' and 'password' must be defined.
  #
  # When 'image.pullSecretList' is non-empty the created secret is not used.
  pullSecret:
    # Custom pull secret name.
    # When not defined chart's full name is used with '-imagepullsecret' suffix.
    name: ""

    # Pull secret username
    #
    # This value is ignored when 'image.pullToken' is defined.
    username: ""

    # Pull secret password
    #
    # This value is ignored when 'image.pullToken' is defined.
    password: ""

  # The pull policy for images.
  pullPolicy: Always

  # The repository used for sensor
  sensorRepository: sensor

  # The repository used for sensor-vector
  sensorVectorRepository: sensor-vector

  # The repository used for sentry
  sentryRepository: sentry

  # The repository used for vermon
  vermonRepository: vermon

daemonSet:
  # hush-sensor daemon set
  #   true  = Deploy hush-sensor DaemonSet as part of helm-chart installation
  #   false = Do not deploy hush-sensor DaemonSet.
  #           Useful when specific functionality subset is required.
  enabled: true

  # Custom priority class
  priorityClassName: ""

  # Custom node selector
  nodeSelector: {}

  # A custom CRI socket path.
  #
  # This must be the full socket path on the Host.
  # Needed in cases when it cannot be auto-detected.
  criSocketPath: ""

  # Additional annotations.
  # For more information see
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  annotations: {}

  # Termination grace period
  terminationGracePeriodSeconds: 30

  # An update strategy
  updateStrategy:
    type: RollingUpdate

  # Node affinity.
  # Choose the node types by OS and Arch.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
            - key: type
              operator: NotIn
              values:
                - virtual-kubelet
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
                - fargate

  # A list of tolerations.
  # Match all taints by default.
  # For more information see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations:
    - operator: "Exists"

  # An additional set of volumes
  extraVolumes: []

  # An additional set of mounts for sensor
  sensorExtraVolumeMounts: []

  # Default resource requests/limits for sensor
  resources:
    limits:
      cpu: "2"
      memory: "1Gi"
    requests:
      cpu: "20m"
      memory: "256Mi"

  # Default resource requests/limits for sensor-vector
  vectorResources:
    limits:
      cpu: "330m"
      memory: "256Mi"
    requests:
      cpu: "10m"
      memory: "64Mi"

sensorConfigMap:
  # Configure pod tracing:
  #   false = trace annotated pods only
  #   true  = trace all pods (besides kube-system)
  trace_pods_default: true
  # Report TLS connections
  report_tls: false
  # Akeyless Gateway domain name
  akeyless_gateway_domain: ""

sentry:
  # Hush Security Sentry monitors k8s secrets usage as volumes/envvars in pods
  #    true  = Deploy the Sentry pod as part of the Sensor installation
  #    false = Do not deploy the Sentry pod
  enabled: true

  # Custom priority class
  priorityClassName: ""

  # Custom node selector
  nodeSelector: {}

  # Additional annotations.
  # For more information see
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  annotations: {}

  # Termination grace period
  terminationGracePeriodSeconds: 30

  # An update strategy
  strategy:
    type: RollingUpdate

  # Node affinity.
  # Choose the node types by OS and Arch.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64

  # A list of tolerations.
  # Match all taints by default.
  # For more information see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations:
    - operator: "Exists"

  # An additional set of volumes
  extraVolumes: []

  # An additional set of mounts for sentry
  sentryExtraVolumeMounts: []

  # Default resource requests/limits for sentry
  resources:
    limits:
      cpu: "300m"
      memory: "256Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"

  # Default resource requests/limits for sentry-vector
  vectorResources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"

  # Customizations for sentry service account
  serviceAccount:
    # Custom annotations for sentry service account
    annotations: {}

  # Integration for external services
  integrations:
    # for aws only one of the following is required: irsa or assume_role_arn
    # if both defined, irsa will take precedence over assume_role_arn.
    aws:
      # AWS IAM role ARN to configure with irsa annotations
      irsa: ""
      # AWS IAM role ARN to assume
      assume_role_arn: ""

vermon:
  # Hush Security Vermon keeps hush sensor channel images up to date.
  # Hush Sensor containers must be deployed with image pull policy "Always"
  # for this feature to perform as expected.
  #    true  = Deploy the Vermon pod as part of the Sensor installation
  #    false = Do not deploy the Vermon pod
  enabled: true

  # How often to check for channel updates, in go time.Duration format
  # Minimum 4 hours, maximum 360 hours (15 days)
  updateFrequency: "8h"

  # Custom priority class
  priorityClassName: ""

  # Custom node selector
  nodeSelector: {}

  # Additional annotations.
  # For more information see
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  annotations: {}

  # Termination grace period
  terminationGracePeriodSeconds: 30

  # An update strategy
  strategy:
    type: RollingUpdate

  # Node affinity.
  # Choose the node types by OS and Arch.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64

  # A list of tolerations.
  # Match all taints by default.
  # For more information see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations:
    - operator: "Exists"

  # An additional set of volumes
  extraVolumes: []

  # An additional set of mounts for vermon
  vermonExtraVolumeMounts: []

  # Default resource requests/limits for vermon
  resources:
    limits:
      cpu: "300m"
      memory: "256Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"

  # Default resource requests/limits for vermon-vector
  vectorResources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"
